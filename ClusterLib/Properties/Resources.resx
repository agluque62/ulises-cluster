<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivateNumAdaptersError" xml:space="preserve">
    <value>Nodo no activado. Este nodo tiene menos adaptadores validos que el remoto</value>
  </data>
  <data name="ActivateTimeout" xml:space="preserve">
    <value>Timeout intentando activar el nodo</value>
  </data>
  <data name="Adapter1" xml:space="preserve">
    <value>Adaptador 1</value>
  </data>
  <data name="Adapter2" xml:space="preserve">
    <value>Adaptador 2</value>
  </data>
  <data name="AdapterDetected" xml:space="preserve">
    <value>Detectado adaptador {0} ({1})</value>
  </data>
  <data name="AdapterNotOperational" xml:space="preserve">
    <value>Adaptador {0} ({1}) no operacional</value>
  </data>
  <data name="AlreadyActivate" xml:space="preserve">
    <value>Nodo ya activo desde {0}</value>
  </data>
  <data name="AlreadyDeactivate" xml:space="preserve">
    <value>Nodo ya desactivado desde {0}</value>
  </data>
  <data name="ClusterInfo" xml:space="preserve">
    <value>Nodo Local:\n{0}\nNodo Remoto:\n{1}</value>
  </data>
  <data name="CreateIpError" xml:space="preserve">
    <value>Error creando Ip de cluster</value>
  </data>
  <data name="DeactivateByNotAdapters" xml:space="preserve">
    <value>Nodo desactivado al no estar operativos los adaptadores</value>
  </data>
  <data name="DeactivateNumAdaptersError" xml:space="preserve">
    <value>Error desactivando nodo. El nodo remoto tiene menos adaptadores validos que el actual</value>
  </data>
  <data name="DeactivateValidRemoteNodeError" xml:space="preserve">
    <value>Error desactivando nodo. El nodo remoto no esta operativo</value>
  </data>
  <data name="DeleteIpError" xml:space="preserve">
    <value>Error borrando Ip de cluster</value>
  </data>
  <data name="DetectedTwoActiveNodesError" xml:space="preserve">
    <value>Detectados dos nodos activos al mismo tiempo</value>
  </data>
  <data name="ExitApplication" xml:space="preserve">
    <value>Saliendo de la aplicacion</value>
  </data>
  <data name="FoundClusterIps" xml:space="preserve">
    <value>Nodo desactivado por encontrarse las Ip de cluster en la red</value>
  </data>
  <data name="LocalActivateAsk" xml:space="preserve">
    <value>Recibida peticion local de activacion</value>
  </data>
  <data name="LocalDeactivateAsk" xml:space="preserve">
    <value>Nodo desactivado por peticion local</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="NewDataError" xml:space="preserve">
    <value>Error parseando mensaje del nodo remoto</value>
  </data>
  <data name="NodeActive" xml:space="preserve">
    <value>Nodo activado</value>
  </data>
  <data name="NodeNotOperational" xml:space="preserve">
    <value>Nodo no operativo</value>
  </data>
  <data name="NotOperational" xml:space="preserve">
    <value>No operativo</value>
  </data>
  <data name="PeriodicTaskError" xml:space="preserve">
    <value>Error procesando las tareas periodicas</value>
  </data>
  <data name="ReceivedRemoteNodeState" xml:space="preserve">
    <value>Recibido estado de nodo remoto\n{0}</value>
  </data>
  <data name="RemoteActivateAsk" xml:space="preserve">
    <value>Recibida peticion remota de activacion</value>
  </data>
  <data name="RemoteDeactivateAsk" xml:space="preserve">
    <value>Nodo desactivado por peticion remota</value>
  </data>
  <data name="RemoteNodeActivating" xml:space="preserve">
    <value>Nodo no activado. El nodo remoto ya esta en proceso de activacion</value>
  </data>
  <data name="RemoteNodeNotOperational" xml:space="preserve">
    <value>Ha dejado de recibirse presencias del nodo remoto</value>
  </data>
  <data name="SendError" xml:space="preserve">
    <value>Error enviando mensaje a nodo remoto</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>Estado</value>
  </data>
  <data name="StateBegin" xml:space="preserve">
    <value>Ini. del estado</value>
  </data>
  <data name="StateCause" xml:space="preserve">
    <value>Org. del estado</value>
  </data>
  <data name="UnknownMsgType" xml:space="preserve">
    <value>Recibido tipo de mensaje desconocido</value>
  </data>
</root>